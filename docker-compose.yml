services:
  book-mysql:
    image: mysql:8.0
    #image: mysql:8.0.33
    #image: quay.io/debezium/example-mysql:2.1
    container_name: book-mysql
    hostname: book-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
      - MYSQL_USER=book-user
      - MYSQL_PASSWORD=book
    volumes:
      - mysql_data:/var/lib/mysql
      - share_data:/partage
    #network_mode: host
    networks:
      - bigdata
    ports:
      - "8889:3306" 
  dbt:
    image: jrmd24/dbt # Use the version you prefer
    build:
      context: .
      dockerfile: Dockerfile_DBT
    container_name: dbt
    hostname: dbt
    volumes:
      - dbt_data:/usr/app
      - share_data:/partage
    #network_mode: host
    networks:
      - bigdata
    restart: always

  airflow:
    image: jrmd24/airflow # Use the version you prefer
    container_name: airflow
    hostname: airflow
    build:
      context: .
      dockerfile: Dockerfile_Airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor  # Use LocalExecutor for simplicity in a single container
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow  # Default, can be changed
      AIRFLOW__WEBSERVER__RBAC: 'True' # Enable RBAC for the UI
      # Add any other Airflow environment variables you need
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_config:/opt/airflow/config # Optional
      - airflow_plugins:/opt/airflow/plugins
      - share_data:/partage
    ports:
      - "8080:8080"
    networks:
      - bigdata
    restart: always

  airflow-postgres:
    image: postgres:13-alpine
    container_name: airflow-postgres
    hostname: airflow-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
      - share_data:/partage
    ports:
      - "5432:5432" # Optional: expose for local debugging
    networks:
      - bigdata
    restart: always
 
  ## NIFI
  #nanp-nifi:
  #  image: apache/nifi:1.24.0
  #  container_name: nanp-nifi
  #  hostname: nanp-nifi
  #  restart: always
  #  environment:
  #    - NIFI_WEB_HTTPS_PORT=8443
  #    #- NIFI_WEB_HTTP_PORT=8080
  #    - SINGLE_USER_CREDENTIALS_USERNAME=nifi_user
  #    - SINGLE_USER_CREDENTIALS_PASSWORD=lundimardi1234
  #  volumes:
  #    #- nifi_data:/opt/nifi/nifi-current/
  #    - share_data:/partage
  #  networks:
  #    - bigdata
  #  ports:
  #    - "8887:8080"
  #    - "8443:8443"
   
 
  
  ## ELASTICSEARCH  
  #elasticsearch:
  #  #image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
  #  image: docker.elastic.co/elasticsearch/elasticsearch:8.3.2
  #  container_name: elasticsearch
  #  hostname: elasticsearch
  #  restart: always
  #  environment:
  #    - xpack.security.enabled=false
  #    - discovery.type=single-node
  #    - node.name=elasticsearch
  #    - cluster.name=docker-cluster
  #    ##- cluster.initial_master_nodes=elasticsearch
  #    - bootstrap.memory_lock=true
  #    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
  #    #- http.cors.enabled=true
  #    #- http.cors.allow-origin=*
  #    ##- network.host=_eth0_
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #    nofile:
  #      soft: 65536
  #      hard: 65536
  #  cap_add:
  #    - IPC_LOCK
  #  volumes:
  #    - share_data:/partage
  #    #- ./elasticsearch-data:/usr/share/elasticsearch/data
  #    - elastic_data:/usr/share/elasticsearch/data
  #  ports:
  #    - 9200:9200
  #  networks:
  #    - bigdata
  
  ## KIBANA
  #kibana:
  #  container_name: kibana
  #  #image: docker.elastic.co/kibana/kibana:7.4.0
  #  image: docker.elastic.co/kibana/kibana:8.3.2
  #  hostname: kibana
  #  restart: always
  #  environment:
  #    - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
  #  ports:
  #    - 5601:5601
  #  depends_on:
  #    - elasticsearch
  #  volumes:
  #    - share_data:/partage
  #  networks:
  #    - bigdata
    
volumes:
  airflow_postgres_data:
   driver: local # Define the driver and options under the volume name
   driver_opts:
     type: none
     device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\airflow_volume\postgres_data
     o: bind
  airflow_dags:
   driver: local # Define the driver and options under the volume name
   driver_opts:
     type: none
     device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\airflow_volume\dags
     o: bind
  airflow_logs:
   driver: local # Define the driver and options under the volume name
   driver_opts:
     type: none
     device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\airflow_volume\logs
     o: bind
  airflow_plugins:
   driver: local # Define the driver and options under the volume name
   driver_opts:
     type: none
     device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\airflow_volume\plugins
     o: bind
  airflow_config:
   driver: local # Define the driver and options under the volume name 
   driver_opts:
     type: none
     device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\airflow_volume\config
     o: bind
  mysql_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\mysql_volume
      o: bind
  dbt_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\dbt_volume
      o: bind
  #elastic_data: 
  #  driver: local # Define the driver and options under the volume name
  #  driver_opts:
  #    type: none
  #    device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\volume_elastic
  #    o: bind
  #kibana_data:
  #  driver: local # Define the driver and options under the volume name
  #  driver_opts:
  #    type: none
  #    device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\volume_kibana
  #    o: bind
  share_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\partage_nifi\partage
      o: bind
  #nifi_data:
  #  driver: local # Define the driver and options under the volume name
  #  driver_opts:
  #    type: none
  #    device: E:\00.Divers\DIT\04.Cours\M2\01.TechnologiesBigData\Examen\docker_volumes\partage_nifi\nifi_data
  #    o: bind
  
networks:
  bigdata:
#    name: bigdata
#    external: true
